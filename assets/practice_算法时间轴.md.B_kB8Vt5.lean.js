import{_ as a,c as t,a2 as o,o as r}from"./chunks/framework.0Bx0CPYg.js";const u=JSON.parse('{"title":"算法时间轴","description":"","frontmatter":{},"headers":[],"relativePath":"practice/算法时间轴.md","filePath":"practice/算法时间轴.md","lastUpdated":1730040151000}'),l={name:"practice/算法时间轴.md"};function n(p,e,i,c,s,d){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="算法时间轴" tabindex="-1">算法时间轴 <a class="header-anchor" href="#算法时间轴" aria-label="Permalink to &quot;算法时间轴&quot;">​</a></h1><h2 id="让脑子转起来-推荐时间-9-00-10-00" tabindex="-1">让脑子转起来 --&gt; 推荐时间：9:00-10:00 <a class="header-anchor" href="#让脑子转起来-推荐时间-9-00-10-00" aria-label="Permalink to &quot;让脑子转起来 --&gt; 推荐时间：9:00-10:00&quot;">​</a></h2><h2 id="_10-13-哈希" tabindex="-1">10.13 哈希 <a class="header-anchor" href="#_10-13-哈希" aria-label="Permalink to &quot;10.13 哈希&quot;">​</a></h2><ol><li><p><a href="https://leetcode.cn/problems/two-sum/?envType=study-plan-v2&amp;envId=top-100-liked0" target="_blank" rel="noreferrer">hot1:两数之和</a></p><blockquote><p>最后加一个 return [];容错</p></blockquote></li><li><p><a href="https://leetcode.cn/problems/group-anagrams/?envType=study-plan-v2&amp;envId=top-100-liked" target="_blank" rel="noreferrer">hot2:字母异位词分组</a></p><blockquote><p>这题应该是哈希的精髓，将相同点变为 key，value 存原值，达到归类的目的。</p></blockquote></li><li><p><a href="https://leetcode.cn/problems/longest-consecutive-sequence/?envType=study-plan-v2&amp;envId=top-100-liked" target="_blank" rel="noreferrer">hot3:最长连续序列</a></p><blockquote><p>sort()方法用的快排或归并排序时间复杂度为 nlogN 用 set，因为虽然 for 循环里有 while，但是附加的条件判断让我们实现只有部分元素进入 while 吗 公式应该为 n(1+(n/b)(b/n))=2n; (b 为组数，第一个 n/b 为平均每组执行次数，第二个 b/n 为乘组数除所有，就得到了每个数在 while 的执行次数，相当于平均每个组执行一次),故时间复杂度为 O(2n)及 O(n)</p></blockquote></li></ol><h2 id="_10-18" tabindex="-1">10.18 <a class="header-anchor" href="#_10-18" aria-label="Permalink to &quot;10.18&quot;">​</a></h2><ol><li>移动 0 --&gt; 快慢指针</li></ol>',6)]))}const b=a(l,[["render",n]]);export{u as __pageData,b as default};
