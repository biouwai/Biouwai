import{_ as o,c as n,j as t,a as l,a2 as e,o as r}from"./chunks/framework.0Bx0CPYg.js";const m="/Biouwai/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.png",s="/Biouwai/GCN1.jpg",i="/Biouwai/GCN.png",d="/Biouwai/SVD%E5%87%A0%E4%BD%95.png",Q="/Biouwai/svd%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F.png",p="/Biouwai/lightGCL.png",Z=JSON.parse('{"title":"深度学习","description":"","frontmatter":{},"headers":[],"relativePath":"practice/深度学习.md","filePath":"practice/深度学习.md","lastUpdated":1733930266000}'),T={name:"practice/深度学习.md"},h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.149ex"},xmlns:"http://www.w3.org/2000/svg",width:"16.52ex",height:"5.43ex",role:"img",focusable:"false",viewBox:"0 -1450 7302 2400","aria-hidden":"true"},f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.149ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.658ex",height:"5.43ex",role:"img",focusable:"false",viewBox:"0 -1450 2500.7 2400","aria-hidden":"true"},c={start:"5"},u={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},H={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.149ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.52ex",height:"5.43ex",role:"img",focusable:"false",viewBox:"0 -1450 1556 2400","aria-hidden":"true"},w={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},V={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.654ex"},xmlns:"http://www.w3.org/2000/svg",width:"46.952ex",height:"3.943ex",role:"img",focusable:"false",viewBox:"0 -1011.8 20752.9 1742.7","aria-hidden":"true"};function v(y,a,L,b,k,M){return r(),n("div",null,[a[17]||(a[17]=t("h1",{id:"深度学习",tabindex:"-1"},[l("深度学习 "),t("a",{class:"header-anchor",href:"#深度学习","aria-label":'Permalink to "深度学习"'},"​")],-1)),a[18]||(a[18]=t("h2",{id:"矩阵基础",tabindex:"-1"},[l("矩阵基础 "),t("a",{class:"header-anchor",href:"#矩阵基础","aria-label":'Permalink to "矩阵基础"'},"​")],-1)),t("ol",null,[a[3]||(a[3]=e("<li><p>线性代数</p><ul><li>代数：代替数字，研究运算</li><li>线性代数：代替向量，研究线性映射</li></ul></li><li><p>向量</p><ul><li>向量 × 同一个数有意义</li><li>两向量各位置想加有意义</li></ul></li><li><p>线性映射</p><ul><li>一个集合 --&gt; 另一个集合</li><li>映射的像和原象都是向量</li><li>输入 × k ==&gt; 输出 × k</li></ul></li>",3)),t("li",null,[a[2]||(a[2]=t("p",null,"鸡兔同笼问题",-1)),t("p",null,[t("mjx-container",h,[(r(),n("svg",g,a[0]||(a[0]=[e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="5B" d="M247 -949V1450H516V1388H309V-887H516V-949H247Z" style="stroke-width:3;"></path></g><g data-mml-node="mtable" transform="translate(528,0)"><g data-mml-node="mtr" transform="translate(0,700)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-700)"><g data-mml-node="mtd" transform="translate(41,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mo" transform="translate(1100,0) translate(0 -0.5)"><path data-c="5D" d="M11 1388V1450H280V-949H11V-887H218V1388H11Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(1905.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mrow" transform="translate(2961.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="5B" d="M247 -949V1450H516V1388H309V-887H516V-949H247Z" style="stroke-width:3;"></path></g><g data-mml-node="mtable" transform="translate(528,0)"><g data-mml-node="mtr" transform="translate(0,700)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1294.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2294.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2794.4,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-700)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1294.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2294.4,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2794.4,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mo" transform="translate(3812.4,0) translate(0 -0.5)"><path data-c="5D" d="M11 1388V1450H280V-949H11V-887H218V1388H11Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mrow",{"data-mjx-texclass":"INNER"},[t("mo",{"data-mjx-texclass":"OPEN"},"["),t("mtable",{columnspacing:"1em",rowspacing:"4pt"},[t("mtr",null,[t("mtd",null,[t("mi",null,"x")])]),t("mtr",null,[t("mtd",null,[t("mi",null,"y")])])]),t("mo",{"data-mjx-texclass":"CLOSE"},"]")]),t("mo",null,"="),t("mrow",{"data-mjx-texclass":"INNER"},[t("mo",{"data-mjx-texclass":"OPEN"},"["),t("mtable",{columnspacing:"1em",rowspacing:"4pt"},[t("mtr",null,[t("mtd",null,[t("mn",null,"1"),t("mi",null,"x"),t("mo",null,"+"),t("mn",null,"1"),t("mi",null,"y")])]),t("mtr",null,[t("mtd",null,[t("mn",null,"2"),t("mi",null,"x"),t("mo",null,"+"),t("mn",null,"4"),t("mi",null,"y")])])]),t("mo",{"data-mjx-texclass":"CLOSE"},"]")])])],-1))])])])]),t("ul",null,[a[8]||(a[8]=t("li",null,"鸡向量就是 1 头 2 脚，兔向量就是 1 头 4 脚，分别乘以对应数量，就可得到映射的输出总头数和总脚数",-1)),t("li",null,[a[6]||(a[6]=l("故")),t("mjx-container",f,[(r(),n("svg",x,a[4]||(a[4]=[e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="5B" d="M247 -949V1450H516V1388H309V-887H516V-949H247Z" style="stroke-width:3;"></path></g><g data-mml-node="mtable" transform="translate(528,0)"><g data-mml-node="mtr" transform="translate(0,700)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-700)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mo" transform="translate(1972.7,0) translate(0 -0.5)"><path data-c="5D" d="M11 1388V1450H280V-949H11V-887H218V1388H11Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),a[5]||(a[5]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mrow",{"data-mjx-texclass":"INNER"},[t("mo",{"data-mjx-texclass":"OPEN"},"["),t("mtable",{columnspacing:"1em",rowspacing:"4pt"},[t("mtr",null,[t("mtd",null,[t("mn",null,"1"),t("mo",null,","),t("mn",null,"1")])]),t("mtr",null,[t("mtd",null,[t("mn",null,"2"),t("mo",null,","),t("mn",null,"4")])])]),t("mo",{"data-mjx-texclass":"CLOSE"},"]")])])],-1))]),a[7]||(a[7]=l("就是将鸡兔数映射为头脚数的线性映射"))]),a[9]||(a[9]=t("li",null,"且也满足两组组合相加有意义，数乘有意义",-1))]),t("ol",c,[t("li",null,[a[14]||(a[14]=l("矩阵 --> 线性映射的代名词 ")),t("ul",null,[t("li",null,[a[12]||(a[12]=l("矩阵每一列，就代表着线性映射的每一个向量，比如")),t("mjx-container",u,[(r(),n("svg",H,a[10]||(a[10]=[e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="5B" d="M247 -949V1450H516V1388H309V-887H516V-949H247Z" style="stroke-width:3;"></path></g><g data-mml-node="mtable" transform="translate(528,0)"><g data-mml-node="mtr" transform="translate(0,700)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-700)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mo" transform="translate(1028,0) translate(0 -0.5)"><path data-c="5D" d="M11 1388V1450H280V-949H11V-887H218V1388H11Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),a[11]||(a[11]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mrow",{"data-mjx-texclass":"INNER"},[t("mo",{"data-mjx-texclass":"OPEN"},"["),t("mtable",{columnspacing:"1em",rowspacing:"4pt"},[t("mtr",null,[t("mtd",null,[t("mn",null,"1")])]),t("mtr",null,[t("mtd",null,[t("mn",null,"2")])])]),t("mo",{"data-mjx-texclass":"CLOSE"},"]")])])],-1))]),a[13]||(a[13]=l("就代表 1 头 2 脚"))])])])]),a[19]||(a[19]=e(`<h2 id="神经网络" tabindex="-1">神经网络 <a class="header-anchor" href="#神经网络" aria-label="Permalink to &quot;神经网络&quot;">​</a></h2><h3 id="一、目标" tabindex="-1">一、目标 <a class="header-anchor" href="#一、目标" aria-label="Permalink to &quot;一、目标&quot;">​</a></h3><p>得到一个可以由输入 x 得出输出 y 的“模型”。xy 可以是任意场景下的输入输出，如：</p><pre><code>&gt; 1 号 --&gt; 1 号西安车流量
&gt;
&gt; 小明近三天浏览记录 --&gt; 要给小明推荐的视频
</code></pre><h3 id="二、工作原理" tabindex="-1">二、工作原理 <a class="header-anchor" href="#二、工作原理" aria-label="Permalink to &quot;二、工作原理&quot;">​</a></h3><p>一个模型可以看作非线性函数，一个非线性函数又是由多个非线性子函数组合而成，子函数也可以再由子函数组合而成。神经网络有足够的神经元，通过调整各个子函数的权重 ω 和偏置 b，就能大概模拟出一个我们想要的模型。</p><p>下图每一条线就为一个 ω x + b , 每个圈就表示一个神经元。神经元负责将线性函数转为非线性（激活）</p><p><img src="`+m+'" alt=""></p><p>我们该如何训练一个可以模拟正确输出的模型呢</p><ol><li><p>初始化，随机各 ω 和 b，经过一轮输出得到 y^</p></li><li><p>计算 loss， 通过输出 y^ 和 真实 y 计算出 loss</p></li><li><p>减小 loss，loss 越小，说明输出 y^越接近真实值。</p></li></ol><h3 id="三、关键点" tabindex="-1">三、关键点 <a class="header-anchor" href="#三、关键点" aria-label="Permalink to &quot;三、关键点&quot;">​</a></h3><p>模型训练的关键点就在与减小 loss，就有各种算法去减小 loss</p><p>如：</p><p>对 loss 求偏导，如果 loss 对某个参数的偏导为正，则该参数越大，loss 越大。所以就要减小该参数。</p><p>以此不断改变权重 ω 和偏置 b，使 loss 减小到某一区间，就完成了模型的训练</p><h2 id="gcn" tabindex="-1">GCN <a class="header-anchor" href="#gcn" aria-label="Permalink to &quot;GCN&quot;">​</a></h2><h3 id="一、可以做什么" tabindex="-1">一、可以做什么 <a class="header-anchor" href="#一、可以做什么" aria-label="Permalink to &quot;一、可以做什么&quot;">​</a></h3><p>对特征进行提取</p><ol><li>结点分类 <img src="'+s+'" alt=""> 例：上图是一个社交网络，节点表示成员的特征，边表示有社交关系，颜色代表了他们所属的小团体。不依靠节点的特征，只通过图，在随机初始化权重之后，经过两次前向传播，可以大致将成员分对。</li><li>关联预测：预测两个结点之间是否存在连接。</li></ol><h3 id="二、主要思想" tabindex="-1">二、主要思想 <a class="header-anchor" href="#二、主要思想" aria-label="Permalink to &quot;二、主要思想&quot;">​</a></h3><p>对于每个结点，我们都要考虑其所有邻居以及其自身所包含的特征信息。使聚合后的结点特征更准确</p><h3 id="三、聚合公式" tabindex="-1">三、聚合公式 <a class="header-anchor" href="#三、聚合公式" aria-label="Permalink to &quot;三、聚合公式&quot;">​</a></h3><p><img src="'+i+'" alt=""></p>',23)),t("p",null,[t("strong",null,[t("mjx-container",w,[(r(),n("svg",V,a[15]||(a[15]=[e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">特</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">征</text></g><g data-mml-node="mo" transform="translate(7277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8333.6,0)"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z" style="stroke-width:3;"></path></g><g data-mml-node="mfrac" transform="translate(9556.2,0)"><g data-mml-node="mrow" transform="translate(1641.3,481.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">相</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">邻</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">特</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">征</text></g><g data-mml-node="mi" transform="translate(7000,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">权</text></g><g data-mml-node="mi" transform="translate(8778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">重</text></g></g><g data-mml-node="msqrt" transform="translate(220,-548.9) scale(0.707)"><g transform="translate(1020,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">节</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(5000,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">邻</text></g><g data-mml-node="mi" transform="translate(6778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">居</text></g><g data-mml-node="mi" transform="translate(7778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">节</text></g><g data-mml-node="mi" transform="translate(8778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(9778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(10778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(11778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g></g><g data-mml-node="mo" transform="translate(0,74.9)"><path data-c="221A" d="M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z" style="stroke-width:3;"></path></g><rect width="12778" height="42.4" x="1020" y="882.5"></rect></g><rect width="9956.7" height="60" x="120" y="220"></rect></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(19752.9,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g></g></g>',1)]))),a[16]||(a[16]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"一"),t("mi",{mathvariant:"normal"},"个"),t("mi",{mathvariant:"normal"},"结"),t("mi",{mathvariant:"normal"},"点"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"特"),t("mi",{mathvariant:"normal"},"征"),t("mo",null,"="),t("mo",{"data-mjx-texclass":"OP"},"∑"),t("mfrac",null,[t("mrow",null,[t("mi",{mathvariant:"normal"},"相"),t("mi",{mathvariant:"normal"},"邻"),t("mi",{mathvariant:"normal"},"结"),t("mi",{mathvariant:"normal"},"点"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"特"),t("mi",{mathvariant:"normal"},"征"),t("mi",null,"×"),t("mi",{mathvariant:"normal"},"权"),t("mi",{mathvariant:"normal"},"重")]),t("msqrt",null,[t("mi",{mathvariant:"normal"},"节"),t("mi",{mathvariant:"normal"},"点"),t("mi",{mathvariant:"normal"},"边"),t("mi",{mathvariant:"normal"},"个"),t("mi",{mathvariant:"normal"},"数"),t("mi",null,"×"),t("mi",{mathvariant:"normal"},"邻"),t("mi",{mathvariant:"normal"},"居"),t("mi",{mathvariant:"normal"},"节"),t("mi",{mathvariant:"normal"},"点"),t("mi",{mathvariant:"normal"},"边"),t("mi",{mathvariant:"normal"},"个"),t("mi",{mathvariant:"normal"},"数")])]),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",null,"。")])])],-1))])])]),a[20]||(a[20]=e('<p>以此对整个图结构进行聚合操作。</p><p>我们就能得到整个图结构每个结点的深层特征，由此我们就能将每个简单进行分类，预测两个结点间的联系等</p><h2 id="svd" tabindex="-1">SVD <a class="header-anchor" href="#svd" aria-label="Permalink to &quot;SVD&quot;">​</a></h2><h3 id="一、-定义" tabindex="-1">一、 定义 <a class="header-anchor" href="#一、-定义" aria-label="Permalink to &quot;一、 定义&quot;">​</a></h3><ol><li>SVD：</li></ol><p>一个矩阵就是一个线性变换，一般包含了伸缩变化和旋转变化。</p><p>为了使更好的对矩阵进行分析，我们可以将矩阵分解成单独的伸缩变换和旋转变换再进行研究，SVD 就是以此分解矩阵的。</p><p>如下图：正方块在矩阵的的线性映射下变为了右上角图。就可以分解为以下三步:</p><p>（1）在正交矩阵 QT 作用下选择了 90 度</p><p>（2）在对角矩阵 S 作用下伸缩了 n 倍</p><p>（3）再在正交矩阵 Q 作用下逆时针旋转了 90 度</p><p><img src="'+d+'" alt=""></p><p>由此，就将一个一般的矩阵，分解成了一个正交矩阵 × 对角矩阵 × 正交矩阵</p><ol start="2"><li><p>奇异值：</p><p>奇异值可以理解为主特征值，相当于每个维度伸缩的大小。</p><p>奇异值越大，伸缩得越大，说明在此维度的变化越大，当然也就越重要。</p><p>所以奇异值在对角阵主对角线从大到小排列，有时可以忽略后面的奇异值，也能比较完整的还原原矩阵。</p></li></ol><h3 id="二、-思想" tabindex="-1">二、 思想 <a class="header-anchor" href="#二、-思想" aria-label="Permalink to &quot;二、 思想&quot;">​</a></h3><ol><li>矩阵视角：</li></ol><p>当矩阵是高维的情况下，那么这个矩阵就是高维空间下的一个线性变换，这个变换也同样有很多的变换方向，我们通过特征值分解得到的前 N 个特征向量，那么就对应了这个矩阵最主要的 N 个变化方向。我们利用这前 N 个变化方向，就提取了数据的本质特征，就可以近似这个矩阵（变换）。同时，去除影响小的变化方向也有利于降噪、图片压缩等方向的应用。</p><ol start="2"><li>思想：</li></ol><p>找到本质特征，实现问题简化</p><h3 id="三、-链接预测问题中的作用" tabindex="-1">三、 链接预测问题中的作用 <a class="header-anchor" href="#三、-链接预测问题中的作用" aria-label="Permalink to &quot;三、 链接预测问题中的作用&quot;">​</a></h3><p>链接预测通常涉及处理高维的网络数据，例如推荐系统中的用户电影-矩阵（一个用户可能看过很多电影），生物网络中的蛋白质相互作用矩阵等。这些矩阵往往具有很高的维度。</p><p>而通过 svd 分解，将推荐系统中的用户-电影矩阵分解为用户-喜好矩阵与电影-类型矩阵，就将很稀疏的用户-电影矩阵进行了降维，提取出了用户的主要喜好（主要特征），从而使我们能简化运算的同时又保证了预测的准确性。</p><p><img src="'+Q+'" alt=""></p><h2 id="对比学习" tabindex="-1">对比学习 <a class="header-anchor" href="#对比学习" aria-label="Permalink to &quot;对比学习&quot;">​</a></h2><h3 id="一、思想" tabindex="-1">一、思想 <a class="header-anchor" href="#一、思想" aria-label="Permalink to &quot;一、思想&quot;">​</a></h3><p>人类小孩很容易分辨猫和狗，是因为猫和狗有个别特征很不一样，如狗的脸比较突出，猫的毛发比较顺滑等，通过比较这些高阶特征我们就能很快辨别猫狗，而不用从头到尾的分析。</p><p>对比学习就是通过对比数据对的“相似”或“不同”以获取数据的高阶信息。通过训练，让正向数据对经过模型后更靠近，负向数据对离更远，以此让模型具有对应数据的判别能力。</p><h3 id="二、工作原理-1" tabindex="-1">二、工作原理 <a class="header-anchor" href="#二、工作原理-1" aria-label="Permalink to &quot;二、工作原理&quot;">​</a></h3><ol><li><p>数据扩增(增强)：例如同一张猫的照片可以通过调色裁剪等得到另外两张照片</p></li><li><p>编码：将每张图片丢进卷积神经网络中，都会得到一个向量表示。</p></li><li><p>损失函数最小化：</p><p>希望正向数据对的向量表示尽可能的相似 --&gt; 两向量的夹角尽量大（余弦值靠近 1）</p><p>负向数据对的向量表示尽可能的不同 --&gt; 两向量的夹角尽量小（余弦值靠近-1）</p><p>以此去调整损失函数。</p></li></ol><h3 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h3><p>自监督学习，可以用无标注的数据集进行学习</p><h2 id="lightgcl" tabindex="-1">lightGCL <a class="header-anchor" href="#lightgcl" aria-label="Permalink to &quot;lightGCL&quot;">​</a></h2><h3 id="研究背景" tabindex="-1">研究背景 <a class="header-anchor" href="#研究背景" aria-label="Permalink to &quot;研究背景&quot;">​</a></h3><ol><li><p>图神经网络 GNN 在推荐系统表现良好，因为其可以很好的挖掘高阶连接信息以进行协同过滤。但很大部分基于 GNN 的模型都采用了监督学习范式，需要大量带准确标签的数据进行训练</p></li><li><p>实际应用场景中，数据稀疏，导致监督学习无充分信息利用，就可以对比学习可以来进行数据增强，得到节点和图的重要特征。</p></li><li><p>虽然对比学习在提升图推荐系统的效果上作用十分明显，它的效果很大程度上依赖于数据增强的方法。绝大部分现有的图对比学习方法使用基于随机过程或基于经验的数据增强方法。 会有其缺点：</p><p>a. 基于随机过程的图数据增强可能会损失图中重要的结构信息，从而误导模型；</p><p>b. 基于经验的对比学习方法建立在对数据分布较强的假设上，而这会限制模型的普适性，并容易受数据中的噪声影响</p></li><li><p>基于以上问题，论文提出 lightGCL，图数据增强是由奇异值分解及重构（Singular Value Decomposition and Reconstruction）来指导的。</p><p>奇异值分解重构所得的新图为全连接图，不但能挖掘局部的用户-物品交互信息，而且可以提取全局的协同过滤信号；其次，以奇异值分解重构作为数据增强的方法相比于随机过程或基于经验的方法含有更多有效信息；最后，由于该数据增强方法有效保存了原图的信息，</p><p>以将奇异值分解重构图产生的表征向量于原图产生的表征向量直接进行对比学习。将数据增强图的数量由两个减为一个，大大提升了训练效率。</p></li></ol><h3 id="模型介绍" tabindex="-1">模型介绍 <a class="header-anchor" href="#模型介绍" aria-label="Permalink to &quot;模型介绍&quot;">​</a></h3><p><img src="'+p+'" alt=""></p><ol><li><p>局部图结构信息提取</p><p>与通常的协同过滤范式相类似，每个用户和物品都具有一个可学习的隐式表征向量，以表示结点的特征。LightGCL 采取了常用的双层图卷积网络 GCN， 对用户与物品间局部的领域关系进行学习。在每一层图卷积网络中，每个结点的表征向量都会依着图的边传播到相邻结点。 为了防止过拟合，LightGCL 采用了剩余连接的方法，使每个结点在信息传播和整合中不至于丧失自身的有效信息。</p></li><li><p>基于奇异值分解的高效全局信息挖掘 原始矩阵奇异值分解后，截取最大的 q 个奇异值，抛弃剩余的较小奇异值，并重构邻接矩阵。这样可以保留关键信息，去除扰动。</p><p>这个重构的邻接矩阵实际上是原零阶矩阵的低阶近似，不仅包含了原邻接矩阵中的重要组分信息，而且由于其为全连接图， 考虑了每一对用户和物品之间的潜在关联，更能挖掘图中的全局信息。 鉴于以上的优点，LightGCL 采用了这个重构的邻接矩阵作为对比学习中的增强图。 用近似奇异值算法进行奇异值分解避免计算很长时间。</p></li><li><p>简化高效的对比学习 传统的图对比学习方法（如 SGL，SimGCL 等）需要创建两个增强图，而在原图上产生的表征向量并不参与对比学习。这些模型之所以采用这种低效的结构， 可能是因为他们<strong>采用的基于随机过程的图增强方法可能对主任务的学习起到误导效果</strong>。</p><p>LightGCL 框架中，增强图实际上包含奇异值分解带来的有效信息，可以加强主任务的学习。 因此，我们得以将奇异值分解重构图产生的表征向量于原图产生的表征向量直接进行对比学习。 这样一来，模型只需计算一个增强图，大大简化了对比学习的范式。</p></li></ol>',37))])}const z=o(T,[["render",v]]);export{Z as __pageData,z as default};
